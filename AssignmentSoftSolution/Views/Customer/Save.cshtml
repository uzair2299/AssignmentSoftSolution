@model AssignmentSoftSolution.ViewModel.CustomerViewModel

@{
    ViewBag.Title = "Save";
}

<h2>Add New Customer </h2>


@using (Html.BeginForm("Save","Customer",FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-check" style="margin-bottom: 55px" ;>
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="radio-inline">
                @Html.RadioButtonFor(model => model.Gender, "false", new { @class = "form-check-input" }) Female

            </div>
            <div class="radio-inline">
                @Html.RadioButtonFor(model => model.Gender, "true", new { @class = "form-check-input" }) Male

            </div>
            <div>
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

        </div>

    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.selectedCityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.selectedCityId, new SelectList(Model.CitiesList, "value", "Text"), "------Select City------", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.selectedCityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Details, 5, 100, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
        </div>
    </div>
    @Html.HiddenFor(model => model.CustomerId)

    @{
        string btnValue = null;
        if(Model.CustomerId >= 1)
        {
            btnValue = "Update Customer";
        }
        else
        {
            btnValue = "Add New Customer";
        }

    }
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="@btnValue" class="btn btn-info" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "CustomerList","Customer")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
